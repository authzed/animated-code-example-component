{"version":3,"sources":["../../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../../src/index.tsx","App.tsx","index.tsx"],"names":["_Pact","prototype","then","onFulfilled","onRejected","result","state","this","s","callback","_settle","v","e","o","_this","value","pact","bind","observer","_isSettledPact","thenable","_iteratorSymbol","Symbol","iterator","_forOf","target","body","check","step","reject","_cycle","next","done","return","_fixup","TypeError","values","i","length","push","array","_forTo","asyncIterator","stepsForText","text","startLineNumber","startColumnIndex","pasteDelimiters","steps","leftPasteDel","rightPasteDel","currentIndex","consumeChar","peek","addStep","kind","consumeWhitespace","consumed","consumePaste","peeked","Error","char","DemoStepKind","remainder","StepTarget","PASTE_DELAYS","startDelay","endDelay","DELAY_CHARACTERS","sleep","ms","Promise","resolve","setTimeout","AnimatedCodeExample","props","monaco","useMonaco","editorRef","useRef","useState","isEditorReady","setEditorReady","browserContent","setBrowserContent","replContent","setReplContent","setTarget","useInView","threshold","triggerOnce","inView","ref","theme","useEffect","script","id","major","minor","decorations","lineNumber","columnIndex","newRepl","currentTarget","changeTarget","range","op","identifier","forceMoveMarkers","options","inlineClassName","newDecorations","stickiness","NeverGrowsWhenTypingAtEdges","delays","lookupDelays","className","clsx","Styles","initialEditorContent","width","height","language","editorLanguage","onMount","editor","padding","top","scrollbar","handleMouseWheel","vertical","horizontal","minimap","enabled","highlightActiveIndentGuide","cursorStyle","overviewRulerBorder","wordWrap","renderLineHighlight","React","disabled","style","initialReplContent","initialBrowserContent","EDITOR","REPL","SLEEP","duration","INSERT_TEXT","SET_BROWSER_CONTENT","BROWSER","App","highlightActiveElement","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.229d736c.chunk.js","sourcesContent":["// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import Editor, { useMonaco } from \"@monaco-editor/react\";\nimport clsx from 'clsx';\nimport monaco from 'monaco-editor-core';\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useInView } from 'react-intersection-observer';\nimport Styles from './animated-code-example.module.css';\n\n/**\n * DemoStepKind holds the kinds of steps in the demo script.\n */\nexport enum DemoStepKind {\n  /**\n   * SLEEP indicates the animation should sleep for the `duration` number of ms.\n   */\n  SLEEP = -1,\n\n  /**\n   * INSERT_TEXT inserts the text found in `value`. For insertion into the editor, must\n   * not contain a newline (use INSERT_NEWLINE).\n   */\n  INSERT_TEXT = 1,\n\n  /**\n   * INSERT_NEWLINE inserts a newline.\n   */\n  INSERT_NEWLINE = 2,\n\n  /**\n   * INSERT_PASTED_TEXT inserts the given text as if it were pasted in by the user.\n   */\n  INSERT_PASTED_TEXT = 3,\n\n  /**\n   * SET_BROWSER_CONTENT sets the contents of the browser pane.\n   */\n  SET_BROWSER_CONTENT = 4,\n}\n\n/**\n * StepTarget is the target of the step in the script.\n */\nexport enum StepTarget {\n  EDITOR = 0,\n  REPL = 1,\n  BROWSER = 2\n}\n\nexport type DeltaStepKind = Exclude<DemoStepKind, DemoStepKind.SLEEP>\n\nexport type DeltaStep = {\n  /**\n   * kind is the kind of action in the demo script.\n   */\n  kind: DeltaStepKind\n\n  /**\n   * target is the target of the step.\n   */\n  target: StepTarget\n\n  /**\n   * If target = EDITOR, the starting line number at which to perform the insertion. If not given,\n   * the last insertion location is used.\n   */\n  startLineNumber?: number\n\n  /**\n   * If target = EDITOR, the starting column index at which to perform the insertion. If not given,\n   * the last insertion location is used.\n   */\n  startColumnIndex?: number\n\n  /**\n   * value is the value of the action. For editor/repl, it is the text to insert. For the browser,\n   * it is the content to display.\n   */\n  value: string\n};\n\nexport type SleepStep = {\n  kind: DemoStepKind.SLEEP,\n  duration: number\n};\n\n/**\n * DemoScriptStep defines a single step in the DemoScript.\n */\nexport type DemoScriptStep = DeltaStep | SleepStep;\n\n/**\n * DemoScript defines a script for how to animate the code example.\n */\nexport interface DemoScript {\n  /**\n   * steps are the individual steps or actions to take in the animation script.\n   */\n  steps: DemoScriptStep[]\n\n  /**\n   * initialBrowserContent is the initial content to display in the browser pane.\n   */\n  initialBrowserContent: string\n\n  /**\n   * initialReplContent is the initial content to display in the REPL pane.\n   */\n  initialReplContent: string\n\n  /**\n   * initialEditorContent is the initial content to display in the editor pane.\n   */\n  initialEditorContent: string\n\n  /**\n   * editorLanguage is the Monaco language to use for the editor.\n   */\n  editorLanguage: string\n}\n\n/**\n * stepsForText converts a text string into a series of DemoScriptStep's, with appropriate\n * kinds for whitespace, newlines and pastes. Note that clusters of whitespace will be converted\n * to a single insertion, to match auto-indentation.\n *\n * @param text The text to convert.\n * @param target The targert for the elements (must be EDITOR or REPL)\n * @param startLineNumber The optional starting line number (1-indexed)\n * @param startColumnIndex The optional starting column index (1-indexed).\n * @param pasteDelimiters If specified, the delimiters to be used for kind=INSERT_PASTE text. If\n * not specified, the unicode characters `«` and `»` are used.\n * @returns The created steps.\n */\nexport function stepsForText(text: string, target: StepTarget, startLineNumber?: number, startColumnIndex?: number, pasteDelimiters?: string[]): DemoScriptStep[] {\n  const steps: DeltaStep[] = [];\n  const [leftPasteDel, rightPasteDel] = pasteDelimiters ?? ['«', '»']\n\n  let currentIndex = 0;\n\n  const consumeChar = () => {\n    if (currentIndex >= text.length) {\n      return undefined;\n    }\n\n    currentIndex += 1;\n    return text[currentIndex - 1];\n  };\n\n  const peek = () => {\n    if (currentIndex >= text.length) {\n      return undefined;\n    }\n\n    return text[currentIndex];\n  };\n\n  const addStep = (kind: DeltaStepKind, value: string) => {\n    steps.push({\n      target: target,\n      kind: kind,\n      value: value,\n    })\n  };\n\n  const consumeWhitespace = () => {\n    let consumed = '';\n    while (peek() === ' ') {\n      consumed += consumeChar();\n    }\n    return consumed;\n  };\n\n  const consumePaste = () => {\n    let consumed = '';\n    while (true) {\n      const peeked = peek();\n      if (peeked === undefined) {\n        throw Error(\"Unterminated paste\");\n      }\n\n      if (peeked === '\\n') {\n        throw Error('Newline not allowed in paste')\n      }\n\n      if (peeked === rightPasteDel) {\n        consumeChar();\n        return consumed;\n      }\n\n      consumed += consumeChar();\n    }\n  };\n\n  while (true) {\n    const char = consumeChar();\n    if (char === undefined) {\n      break;\n    }\n\n    if (char === '\\n') {\n      addStep(DemoStepKind.INSERT_NEWLINE, '\\n');\n      continue;\n    }\n\n    if (char === ' ') {\n      const remainder = consumeWhitespace();\n      addStep(DemoStepKind.INSERT_TEXT, ' ' + remainder);\n      continue;\n    }\n\n    if (char === leftPasteDel) {\n      addStep(DemoStepKind.INSERT_PASTED_TEXT, consumePaste());\n      continue;\n    }\n\n    addStep(DemoStepKind.INSERT_TEXT, char);\n  }\n\n  if (steps.length > 0) {\n    steps[0].startLineNumber = startLineNumber\n    steps[0].startColumnIndex = startColumnIndex\n  }\n\n  return steps;\n}\n\ninterface Delays {\n  startDelay?: number | undefined\n  endDelay?: number | undefined\n}\n\nconst PASTE_DELAYS: Delays = {\n  startDelay: 300,\n  endDelay: 100,\n}\n\nconst DELAY_CHARACTERS: Record<string, Delays> = {\n  ' ': {\n    endDelay: 110\n  },\n  '\\n': {\n    endDelay: 60,\n  },\n  '(': {\n    startDelay: 190,\n    endDelay: 170,\n  },\n  ')': {\n    startDelay: 190,\n    endDelay: 170,\n  },\n}\n\nconst lookupDelays = (step: DeltaStep): Delays => {\n  switch (step.kind) {\n    case DemoStepKind.INSERT_NEWLINE:\n      return DELAY_CHARACTERS['\\n']\n\n    case DemoStepKind.INSERT_PASTED_TEXT:\n      return PASTE_DELAYS;\n\n    default:\n      if (step.value.length === 1) {\n        if (step.value in DELAY_CHARACTERS) {\n          return DELAY_CHARACTERS[step.value];\n        } else {\n          // Default character delay.\n          return {\n            endDelay: 60\n          }\n        }\n      }\n\n      return {};\n  }\n};\n\nexport interface AnimatedCodeExampleProps {\n  /**\n   * script is the script for the animation.\n   */\n  script: DemoScript\n\n  /**\n   * browserDisplayedUrl is the URL to display in the browser pane. If unspecified, defaults\n   * to `https://example.com`\n   */\n  browserDisplayedUrl?: string\n\n  /**\n   * editorWidth is the width of the code editor displayed. Defaults to 600.\n   */\n  editorWidth?: number | string\n\n  /**\n   * editorHeight is the height of the code editor displayed. Defaults to 300.\n   */\n  editorHeight?: number | string\n\n  /**\n   * rootClassName is the custom root CSS class name for the component.\n   */\n  rootClassName?: string\n\n  /**\n   * theme sets the visible theme for the editor and repl. Defaults to 'light'.\n   */\n  theme?: 'light' | 'dark' | undefined\n\n  /**\n   * highlightActiveElement enables visible highlighting of the in use component. Defaults to false.\n   */\n  highlightActiveElement?: boolean\n}\n\nconst sleep = (ms: number) => {\n  return new Promise(resolve => setTimeout(resolve, ms));\n};\n\n/**\n * AnimatedCodeExample displays an animated code example as a component.\n */\nexport function AnimatedCodeExample(props: AnimatedCodeExampleProps) {\n  const monaco = useMonaco();\n  const editorRef = useRef<monaco.editor.IStandaloneCodeEditor | null>(null);\n  const [isEditorReady, setEditorReady] = useState(false);\n\n  const handleEditorMounted = (editor: monaco.editor.IStandaloneCodeEditor) => {\n    editorRef.current = editor;\n    setEditorReady(true);\n  }\n\n  const [browserContent, setBrowserContent] = useState(props.script.initialBrowserContent);\n  const [replContent, setReplContent] = useState(props.script.initialReplContent);\n  const [target, setTarget] = useState<StepTarget | undefined>(undefined);\n\n  const { inView, ref } = useInView({\n    threshold: 0.8,\n    triggerOnce: true,\n  });\n\n  const theme = props.theme ?? 'light';\n\n  useEffect(() => {\n    const runScript = () => {\n      (async () => {\n        await sleep(300);\n\n        const script = props.script;\n        var id = { major: 1, minor: 1 };\n        var decorations: any[] = [];\n\n        let lineNumber = 1;\n        let columnIndex = 1;\n\n        let newRepl = props.script.initialReplContent;\n        let currentTarget: StepTarget | undefined = undefined;\n\n        const changeTarget = async (step: DeltaStep) => {\n          if (currentTarget !== step.target) {\n            currentTarget = step.target;\n            setTarget(step.target);\n            await sleep(100);\n          }\n        };\n\n        for (const step of script.steps) {\n          if (step.kind === DemoStepKind.SLEEP) {\n            await sleep(step.duration);\n          } else if (step.kind === DemoStepKind.SET_BROWSER_CONTENT) {\n            // If the target is different, switch to it first before running.\n            await changeTarget(step);\n            setBrowserContent('')\n            await sleep(500);\n            setBrowserContent(step.value)\n            await sleep(200);\n            continue;\n          } else {\n            // If the target is different, switch to it first before running.\n            await changeTarget(step);\n\n            const delays = lookupDelays(step);\n            if (delays.startDelay !== undefined) {\n              await sleep(delays.startDelay);\n            }\n\n            if (step.target === StepTarget.EDITOR) {\n              lineNumber = step.startLineNumber ?? lineNumber\n              columnIndex = step.startColumnIndex ?? columnIndex\n\n              var range = new monaco!.Range(lineNumber, columnIndex, lineNumber, columnIndex);\n              var op = { identifier: id, range: range, text: step.value, forceMoveMarkers: true };\n              editorRef.current!.executeEdits(\"animated-code-example\", [op]);\n\n              if (step.value.trim().length) {\n                editorRef.current!.deltaDecorations([], [{\n                  range: new monaco.Range(lineNumber, columnIndex, lineNumber, columnIndex + step.value.length),\n                  options: { inlineClassName: 'addition' }\n                }])\n              }\n\n              const newDecorations = [\n                {\n                  range: new monaco.Range(lineNumber, columnIndex, lineNumber, columnIndex + step.value.length),\n                  options: { inlineClassName: 'fake-cursor', stickiness: monaco.editor.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges }\n                },\n              ];\n\n              decorations = editorRef.current!.deltaDecorations(decorations, newDecorations)\n\n              if (step.kind === DemoStepKind.INSERT_NEWLINE) {\n                lineNumber += 1;\n                columnIndex = 1;\n              } else {\n                columnIndex += step.value.length;\n              }\n            } else {\n              newRepl = newRepl + step.value;\n              setReplContent(newRepl);\n            }\n\n            if (delays.endDelay !== undefined) {\n              await sleep(delays.endDelay);\n            }\n          }\n        }\n      })();\n    };\n\n    if (monaco && isEditorReady && inView) {\n      runScript();\n    }\n  }, [monaco, isEditorReady, inView, props.script]);\n\n  return <div ref={ref}>\n    <div className={clsx(Styles['animated-preview'], Styles[theme], props.highlightActiveElement && Styles[\"with-active\"], props.rootClassName)}>\n      <div className={clsx(Styles[\"editor-container\"], Styles[\"target\"], { [Styles[\"active\"]]: target === StepTarget.EDITOR })}>\n        <div className={Styles[\"editor-overlay\"]}></div>\n        <Editor\n          value={props.script.initialEditorContent}\n          width={props.editorWidth ?? 600}\n          height={props.editorHeight ?? 200}\n          language={props.script.editorLanguage}\n          onMount={handleEditorMounted}\n          options={{\n            theme: theme === 'dark' ? 'vs-dark' : 'vs',\n            padding: { top: '10px' },\n            scrollbar: { handleMouseWheel: false, vertical: 'hidden', horizontal: 'hidden' },\n            minimap: {\n              enabled: false\n            },\n            highlightActiveIndentGuide: false,\n            cursorStyle: 'block-outline',\n            overviewRulerBorder: false,\n            wordWrap: 'on',\n            renderLineHighlight: 'none'\n          }}\n        />\n      </div>\n\n      <pre className={clsx(Styles[\"repl\"], Styles[\"target\"], { [Styles[\"active\"]]: target === StepTarget.REPL })}>$ {replContent}</pre>\n\n      <div className={clsx(Styles[\"browser\"], Styles[\"target\"], { [Styles[\"active\"]]: target === StepTarget.BROWSER })}>\n        <div className={Styles[\"browser-navigation-bar\"]}>\n          <i></i><i></i><i></i>\n          <input value={props.browserDisplayedUrl ?? 'https://example.com'} disabled />\n        </div>\n\n        <div className={Styles[\"browser-container\"]} style={{ padding: \"6px\" }}>\n          {browserContent !== '' && browserContent}\n          {browserContent === '' && <div className={Styles[\"loader\"]} />}\n        </div>\n      </div>\n    </div>\n  </div>;\n}\n","import React from 'react'\n\nimport { AnimatedCodeExample } from '@authzed/animated-code-example-component'\nimport { DemoScript, DemoStepKind, stepsForText, StepTarget } from '@authzed/animated-code-example-component';\nimport '@authzed/animated-code-example-component/dist/index.css'\n\nconst script: DemoScript = {\n  initialEditorContent: `\n@app.route('/')\ndef hello_world():\n  return 'Hello World!'\n`,\n  initialReplContent: '',\n  initialBrowserContent: 'Hello World!',\n  editorLanguage: 'python',\n  steps: [\n    ...stepsForText(`from somelib import something\\n`, StepTarget.EDITOR, 1, 1),\n    ...stepsForText(' - Hi there!', StepTarget.EDITOR, 5, 23),\n    ...stepsForText('./deploywebsite', StepTarget.REPL, 1, 1),\n    { kind: DemoStepKind.SLEEP, duration: 200 },\n    { kind: DemoStepKind.INSERT_TEXT, target: StepTarget.REPL, value: '\\n> Website updated!' },\n    { kind: DemoStepKind.SLEEP, duration: 500 },\n    { kind: DemoStepKind.SET_BROWSER_CONTENT, target: StepTarget.BROWSER, value: 'Hello World! - Hi there!' },\n  ]\n}\n\nconst App = () => {\n  return <AnimatedCodeExample script={script} theme=\"dark\" highlightActiveElement={true} />;\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}